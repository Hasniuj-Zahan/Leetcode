# -*- coding: utf-8 -*-
"""74_Search_a_2D_Matrix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P4m8vzysbaC2TcHxDw42M1OIqCKQtylX

You are given an m x n integer matrix matrix with the following two properties:

Each row is sorted in non-decreasing order.
The first integer of each row is greater than the last integer of the previous row.
Given an integer target, return true if target is in matrix or false otherwise.

You must write a solution in O(log(m * n)) time complexity.
"""

class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        for i in range(len(matrix)):
            if matrix[i][-1]>target:
                for j in range(len(matrix[i])):
                    if matrix[i][j] == target:
                        return True
            elif matrix[i][-1]==target:
                return True

            else:
                continue
        return False