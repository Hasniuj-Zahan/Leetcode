# -*- coding: utf-8 -*-
"""88_Merge_Sorted_Array.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gd_RXF1gscwan8MPcbm6X2YNJZ1zxK77

You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.

The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.
"""

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        nums3 =nums1[:m]
        i = 0
        j = 0
        r = 0
        while i<m and j<n:
            if nums3[i]>nums2[j]:
                nums1[r]= nums2[j]
                j += 1
            else:
                nums1[r] = nums3[i]
                i +=1
            r +=1
        while j < n:
            nums1[r] = nums2[j]
            j += 1
            r +=1

        while i < m:
            nums1[r]= nums3[i]
            i += 1
            r +=1